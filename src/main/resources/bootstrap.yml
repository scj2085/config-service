#encrypt.key: didispace #指定秘钥信息（对称性秘钥）
#下面是非对称性秘钥
encrypt:
  key-store:
    location: config-server.keystore #此文件路径resource根目录
    alias: config-server #别名
    password: 111111 #秘钥库口令
    secret: 222222 #秘钥口令
server: 
  port: 7001 
  context-path: /
spring:
  application:
    name: approve-config
  cloud: 
    config: 
      server: 
        git: 
          password: shichangjian123
          searchPaths: cloud-config-repo,application,cab,custom,dda,agd,were,gds, log, database
          uri: "https://github.com/scj2085/approve-config.git"
          username: scj2085@163.com
          basedir: /tmp/config #指定一个固定的位置存储从远处git仓库clone的配置信息，在使用了git仓库后，文件都会在config-server的本地文件系统中存储一份，这些文件默认存储在以config-repo为前缀的临时文件目录中，由于随机性及临时目录的特性，为了避免出现问题，给它指定一个目录。
 #         access_token: "32a1ca28-bc7a-4147-88a1-c95abcc30556"
#    bus:
<<<<<<< Updated upstream
#      destination: bus
#eureka:
#  client:
#    serviceUrl:
#      defaultZone: "http://peer1:8761/eureka/,http://peer2:8762/eureka/,http://peer3:8763/eureka/" #注册到集群中-
#      defaultZone: "http://localhost:8761/eureka/"
management:
  port: 1112   #actuator暴露接口使用的端口，为了和api接口使用的端口进行分离
  context-path: /admin   #actuator暴露接口的前缀
  security:
    enabled: true #actuator是否需要安全保证，管理端点暴露，此配置限制了及时动态刷新，问题已解决
endpoints.health.sensitive: true  #actuator的health接口是否需要安全保证,health是一个双重认证开关，如果此开关为false，actuator为true，健康检查不起作用，两个开关同时为true，才能访问
security:
  basic:
    enabled: true #指定接口需要验证
    path: /admin/**,/* #/admin/**表示针对/admin路径的多个路径的多个字符进行认证，相对于管理员的权限访问，/*表示只对跟目录下的多个字符进行认证，不包含多个路径，相对于端点监控使用
  user: 
    name: shichangjian #为此服务添加访问权限
    password: 123    
=======
#      destination: bus 
eureka:
  client:
    serviceUrl:
      defaultZone: "http://peer1:8761/eureka/,http://peer2:8762/eureka/,http://peer3:8763/eureka/" #注册到集群中-
>>>>>>> Stashed changes
